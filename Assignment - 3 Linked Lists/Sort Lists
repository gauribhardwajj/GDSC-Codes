ListNode* sortList(ListNode* head) {
        if(head==NULL || head->next==NULL) return head;

        ListNode* slow= head;
        ListNode* fast= head;

        ListNode* temp= NULL;

        while(fast && fast->next){
            temp= slow;
            slow= slow->next;
            fast= fast->next->next;
        }

        // dissociate both lists 
        temp->next=NULL;

        ListNode* l1= sortList(head);
        ListNode* l2= sortList(slow);

        return mergeList(l1,l2);

    }

    ListNode* mergeList(ListNode* l1, ListNode* l2){
        ListNode* p= new ListNode(0);
        ListNode* curr= p;

        while(l1 && l2){
            if(l1->val<= l2->val){
                curr->next=l1;
                l1=l1->next;
            }
            else{
                curr->next=l2;
                l2=l2->next;
            }
            curr= curr->next;
        }

        //list 1 is over
        if(l2){
            curr->next=l2;
        }

        //list 2 is over
        else{
            curr->next=l1;
        }

        return p->next;
    }
